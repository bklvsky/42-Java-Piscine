(!tmp.isEmpty())
(!words.containsKey(tmp))
(Math.sqrt(denominatorFirst)
(String
(denominatorFirst
(double)
(int
(occVect1.get(i)
(sc.hasNext())
*
+
+=
/
0
0)
0));
0;
1);
2);
:
<
=
==
ArrayList<Integer>
ArrayList<Integer>();
ComparableFile
ComparableFile(File
Comparator
Comparator()
FileReader
FileReader(file);
IOException
Integer>
Integer>();
Math.pow(occVect1.get(i),
Math.pow(occVect2.get(i),
Math.sqrt(denominatorSecond));
Scanner
Scanner(fr).useDelimiter("[\\s
Set<String>
String
TreeMap<String,
TreeSet<String>();
]");
addFiles(ComparableFile
class
compare(ComparableFile
denominatorFirst
denominatorSecond
dict
dict)
dict.addAll(file1.getWords().keySet());
dict.addAll(file2.getWords().keySet());
dict;
double
else
file)
file1,
file2)
for
fr
fr.close();
getDict()
getWords()
i
i++)
if
import
java.io.File;
java.io.FileReader;
java.io.IOException;
java.lang.Math;
java.util.ArrayList;
java.util.Scanner;
java.util.Set;
java.util.TreeMap;
java.util.TreeSet;
new
numerator
occVect1.add(file1.getWords().getOrDefault(word,
occVect1.size();
occVect1;
occVect2.add(file2.getWords().getOrDefault(word,
occVect2.get(i));
occVect2;
private
public
res
res;
return
sc
sc.close();
sc.next();
this.dict;
this.occVect1
this.occVect2
throws
tmp
void
while
word
words
words.get(tmp)
words.put(tmp,
words;
{
||
}
